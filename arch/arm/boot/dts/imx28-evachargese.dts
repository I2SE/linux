/*
 * Copyright 2017 I2SE GmbH
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;
#include <dt-bindings/interrupt-controller/irq.h>
#include "imx28.dtsi"

/ {
	model = "I2SE EVAcharge SE";
	compatible = "i2se,imx28-ievachargese", "fsl,imx28";

	aliases {
		spi1 = &ssp2;	/* give QCA7000 fixed name */
	};

	memory {
		reg = <0x40000000 0x08000000>;
	};

	apb@80000000 {
		apbh@80000000 {
			ssp0: ssp@80010000 {
				compatible = "fsl,imx28-mmc";
				pinctrl-names = "default";
				pinctrl-0 = <&mmc0_8bit_pins_a
					&mmc0_cd_cfg &mmc0_sck_cfg>;
				bus-width = <8>;
				non-removable;
				no-sdio;
				vmmc-supply = <&reg_3p3v>;
				mmc-pwrseq = <&emmc_pwrseq>;
				status = "okay";
			};

			ssp2: ssp@80014000 {
				#address-cells = <1>;
				#size-cells = <0>;
				compatible = "fsl,imx28-spi";
				pinctrl-names = "default";
				pinctrl-0 = <&spi2_pins_a>;
				status = "okay";

				qca7000: qca7000@0 {
					reg = <0x0>;
					compatible = "qca,qca7000";
					interrupt-parent = <&gpio3>;
					interrupts = <25 IRQ_TYPE_EDGE_RISING>;
					spi-cpha;
					spi-cpol;
					spi-max-frequency = <16000000>;
					intr-gpios = <&gpio3 25 GPIO_ACTIVE_HIGH>;
				};

			};

			pinctrl@80018000 {
				pinctrl-names = "default";
				pinctrl-0 = <&hog_pins_a>;

				hog_pins_a: hog {
					fsl,pinmux-ids = <
						/* unused ssp3 to shift register */
						MX28_PAD_SSP3_SCK__GPIO_2_24
						MX28_PAD_SSP3_MOSI__GPIO_2_25
						MX28_PAD_SSP3_MISO__GPIO_2_26
						MX28_PAD_SSP3_SS0__GPIO_2_27
						/* unused external header pins */
						MX28_PAD_AUART3_RX__GPIO_3_12
						MX28_PAD_AUART3_TX__GPIO_3_13
						MX28_PAD_SSP1_SCK__GPIO_2_12
						MX28_PAD_SSP1_CMD__GPIO_2_13
						MX28_PAD_SSP1_DATA0__GPIO_2_14
						MX28_PAD_SSP1_DATA3__GPIO_2_15
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				mac0_phy_reset_pin: mac0-phy-reset@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_ENET0_RX_CLK__GPIO_4_13  /* PHY Reset */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				mac0_phy_int_pin: mac0-phy-int@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_ENET0_TX_CLK__GPIO_4_5   /* PHY Interrupt */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				qca7k: qca7k@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_I2C0_SDA__GPIO_3_25 /* SPI_INT */
						MX28_PAD_LCD_D13__GPIO_1_13  /* QCA7K_RESET */
						MX28_PAD_LCD_D14__GPIO_1_14  /* GPIO_0 */
						MX28_PAD_LCD_D15__GPIO_1_15  /* GPIO_1 */
						MX28_PAD_LCD_D18__GPIO_1_18  /* GPIO_2 */
						MX28_PAD_LCD_D21__GPIO_1_21  /* GPIO_3 */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				motor: motor {
					fsl,pinmux-ids = <
						MX28_PAD_SAIF0_LRCLK__GPIO_3_21 /* MOTOR1_PHASE */
						MX28_PAD_SAIF0_BITCLK__GPIO_3_22 /* MOTOR1_ENABLE */
						MX28_PAD_SAIF0_SDATA0__GPIO_3_23 /* MOTOR2_PHASE */
						MX28_PAD_SAIF1_SDATA0__GPIO_3_26 /* MOTOR2_ENABLE */
						MX28_PAD_SPDIF__GPIO_3_27 /* MOTOR_FAULT */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				daugther: daugther {
					fsl,pinmux-ids = <
						MX28_PAD_LCD_D07__GPIO_1_7 /* DAUGHTER_GPIO_0 */
						MX28_PAD_LCD_D10__GPIO_1_10 /* DAUGHTER_GPIO_1 */
						MX28_PAD_LCD_WR_RWN__GPIO_1_25 /* DAUGHTER_GPIO_2 */
						MX28_PAD_LCD_VSYNC__GPIO_1_28 /* DAUGHTER_GPIO_3 */
						MX28_PAD_LCD_HSYNC__GPIO_1_29 /* DAUGHTER_GPIO_4 */
						MX28_PAD_LCD_DOTCLK__GPIO_1_30 /* DAUGHTER_GPIO_5 */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				control_pilot: control_pilot {
					fsl,pinmux-ids = <
						MX28_PAD_AUART1_CTS__GPIO_3_6 /* CP_EDGE */
						MX28_PAD_AUART1_RTS__GPIO_3_7 /* CP_EDGE */
						MX28_PAD_PWM2__GPIO_3_18 /* CP_HIGH */
						MX28_PAD_PWM3__GPIO_3_28 /* CP_LOW */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				proximity_pilot: proximity_pilot {
					fsl,pinmux-ids = <
						MX28_PAD_LCD_D12__GPIO_1_12 /* PP_PULLUP */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				led_pins: led_pins {
					fsl,pinmux-ids = <
						MX28_PAD_LCD_D16__GPIO_1_16  /* LED_2 */
						MX28_PAD_LCD_D08__GPIO_1_8   /* LED_3 */
						MX28_PAD_AUART1_RX__GPIO_3_4 /* LED_1 */
						MX28_PAD_AUART1_TX__GPIO_3_5 /* LED_0 */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				emmc_reset: emmc_reset {
					fsl,pinmux-ids = <
						/* pullup */
						MX28_PAD_SSP2_SS1__GPIO_2_20 /* EMMC_RESET */
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};
			};

			can1: can@80034000 {
				pinctrl-names = "default";
				pinctrl-0 = <&can1_pins_b>;
				xceiver-supply = <&reg_3p3v>;
				status = "okay";
			};
		};

		apbx@80040000 {
			lradc@80050000 {
				status = "okay";
			};

			i2c1: i2c@8005a000 {
				pinctrl-names = "default";
				pinctrl-0 = <&i2c1_pins_b>;
				status = "okay";
			};

			duart: serial@80074000 {
				pinctrl-names = "default";
				pinctrl-0 = <&duart_pins_a>;
				status = "okay";
			};

			auart0: serial@8006a000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart0_2pins_a>;
				status = "okay";
			};

			auart2: serial@8006e000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart2_2pins_b>;
				status = "okay";
			};

			usbphy0: usbphy@8007c000 {
				status = "okay";
			};

			usbphy1: usbphy@8007e000 {
				status = "okay";
			};
		};
	};

	ahb@80080000 {
		usb0: usb@80080000 {
			status = "okay";
			dr_mode = "host";
		};

		usb1: usb@80090000 {
			status = "okay";
		};

		mac0: ethernet@800f0000 {
			phy-mode = "rmii";
			pinctrl-names = "default";
			pinctrl-0 = <&mac0_pins_a>, <&mac0_phy_reset_pin>;
			phy-supply = <&reg_3p3v>;
			phy-reset-gpios = <&gpio4 13 GPIO_ACTIVE_LOW>;
			phy-reset-duration = <25>;
			phy-handle = <&ethphy>;
			status = "okay";

			mdio {
				#address-cells = <1>;
				#size-cells = <0>;

				ethphy: ethernet-phy@0 {
					compatible = "ethernet-phy-ieee802.3-c22";
					reg = <0>;
					pinctrl-names = "default";
					pinctrl-0 = <&mac0_phy_int_pin>;
					interrupt-parent = <&gpio4>;
					interrupts = <5 IRQ_TYPE_EDGE_FALLING>;
					max-speed = <100>;
				};
			};
		};
	};

	emmc_pwrseq: emmc-pwrseq {
		compatible = "mmc-pwrseq-emmc";
		pinctrl-0 = <&emmc_reset>;
		pinctrl-names = "default";
		reset-gpios = <&gpio2 20 GPIO_ACTIVE_LOW>;
	};

	reg_3p3v: regulator-3p3v {
		compatible = "regulator-fixed";
		regulator-name = "3P3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&led_pins>;

		led0 {			/* Heartbeat */
			label = "evse:red:led0";
			gpios = <&gpio3 5 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
		};

		led1 {			/* unassigned */
			label = "evse:yellow:led1";
			gpios = <&gpio3 4 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "none";
		};

		led2 {			/* CAN traffic */
			label = "evse:yellow:led2";
			gpios = <&gpio1 16 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "can0-rx";
		};

		led3 {			/* Boot process */
			label = "evse:green:led3";
			gpios = <&gpio1 8 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "timer";
		};

	};
};
